# File: .github/workflows/dotnet.yml

name: .NET Build, Test, and Publish

# Controls when the workflow will run
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        dotnet-version: ['8.0.x', '9.0.x'] # Test against both supported frameworks

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release

  pack-and-publish:
    name: Pack & Publish to GitHub Packages
    runs-on: ubuntu-latest
    needs: build-and-test # This job depends on the build-and-test job succeeding
    
    # This job only runs when a new tag starting with 'v' is pushed
    if: startsWith(github.ref, 'refs/tags/v')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x' # Use a single version for packing

    - name: Create NuGet Package
      run: |
        # Extract version number from the Git tag (e.g., v1.2.3 -> 1.2.3)
        VERSION=${GITHUB_REF#refs/tags/v}
        dotnet pack src/Oat.IO.DeltaCompression.csproj --configuration Release --output ./nupkg /p:Version=$VERSION

    - name: Publish to GitHub Packages
      run: dotnet nuget push "./nupkg/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source "https://nuget.pkg.github.com/oat-im/index.json"

