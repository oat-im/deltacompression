name: .NET Build, Test, and Publish

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # This matrix now correctly pairs the target framework with the required SDK.
        dotnet-version: ['8.0.x', '9.0.x']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # This step now correctly sets up the SDK version from the matrix.
    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release

  publish-to-nuget:
    name: Publish to NuGet.org
    runs-on: ubuntu-latest
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        # Use a specific SDK version for packing. It should be the highest one you support.
        dotnet-version: '9.0.x'
    - name: Create NuGet Package
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        dotnet pack src/Oat.IO.DeltaCompression.csproj --configuration Release --output ./nupkg /p:Version=$VERSION
    - name: Publish to NuGet.org
      run: dotnet nuget push "./nupkg/*.nupkg" --api-key ${{ secrets.NUGET_API_KEY }} --source "https://api.nuget.org/v3/index.json"
